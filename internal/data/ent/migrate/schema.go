// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// RecordsColumns holds the columns for the "records" table.
	RecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 64},
		{Name: "creator_id", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "begin_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// RecordsTable holds the schema information for the "records" table.
	RecordsTable = &schema.Table{
		Name:       "records",
		Columns:    RecordsColumns,
		PrimaryKey: []*schema.Column{RecordsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "record_id",
				Unique:  true,
				Columns: []*schema.Column{RecordsColumns[0]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 64},
		{Name: "mysql_id", Type: field.TypeInt, Unique: true, SchemaType: map[string]string{"mysql": "INT AUTO_INCREMENT"}},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 64},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_mysql_id_id",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[1], UsersColumns[0]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		RecordsTable,
		UsersTable,
	}
)

func init() {
}
