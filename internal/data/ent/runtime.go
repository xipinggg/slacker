// Code generated by ent, DO NOT EDIT.

package ent

import (
	"slacker/internal/data/ent/record"
	"slacker/internal/data/ent/schema"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	recordFields := schema.Record{}.Fields()
	_ = recordFields
	// recordDescBeginTime is the schema descriptor for begin_time field.
	recordDescBeginTime := recordFields[3].Descriptor()
	// record.DefaultBeginTime holds the default value on creation for the begin_time field.
	record.DefaultBeginTime = recordDescBeginTime.Default.(func() time.Time)
	// recordDescCreatedAt is the schema descriptor for created_at field.
	recordDescCreatedAt := recordFields[5].Descriptor()
	// record.DefaultCreatedAt holds the default value on creation for the created_at field.
	record.DefaultCreatedAt = recordDescCreatedAt.Default.(func() time.Time)
	// recordDescUpdatedAt is the schema descriptor for updated_at field.
	recordDescUpdatedAt := recordFields[6].Descriptor()
	// record.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	record.DefaultUpdatedAt = recordDescUpdatedAt.Default.(func() time.Time)
	// recordDescID is the schema descriptor for id field.
	recordDescID := recordFields[0].Descriptor()
	// record.DefaultID holds the default value on creation for the id field.
	record.DefaultID = recordDescID.Default.(func() uuid.UUID)
}
